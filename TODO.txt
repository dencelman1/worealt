
1. Инициализация WebGL/WebGPU

Настройка буферов кадра (gl.clear, gl.viewport).
Управление состоянием рендеринга (gl.enable, gl.depthTest, gl.cullFace).

2. Работа с геометрией (меши)

Создание вершинных буферов (VBO) – хранение координат вершин.
Создание индексных буферов (EBO/IBO) – индексы для оптимизации рендеринга.
VAO (Vertex Array Object) – управление группами вершинных данных.
Поддержка основных примитивов: треугольники, линии, точки.

3. Шейдерная система

Компиляция и линковка GLSL-шейдеров.
Управление униформами (uniforms) для передачи данных в шейдеры.
Передача атрибутов вершин (позиция, UV-координаты, нормали).

4. Камера и матрицы преобразования

Проекционная матрица (perspective, orthographic).
Видовая матрица (матрица камеры, lookAt).
Модельная матрица (позиция, поворот, масштаб).

5. Текстуры и материалы

Загрузка изображений (PNG, JPG, WebP) для текстур.
Генерация текстурных буферов (gl.TEXTURE_2D).
Настройка фильтрации (mipmaps, anisotropic filtering, nearest/linear interpolation).
Применение текстур в шейдерах (UV-координаты).

6. Освещение (минимально)

Передача нормалей в шейдер для освещения.
Фонговое освещение (Phong, Lambert, Blinn-Phong).
Направленный (Directional) и точечный свет (Point Light).
Без теней! (тени – это уже сложная игровая логика).

7. Основной цикл рендеринга

requestAnimationFrame для обновления кадра.
Очистка кадра перед рендерингом (gl.clear).
Обход всех объектов сцены и их отрисовка.

8. Загрузка моделей (минимально)

Поддержка .OBJ или .GLTF без анимации.
Загрузка вершин, нормалей, UV-координат.
Без скелетной анимации! (анимация – это игровая логика).




Что НЕ входит (игровая логика)

1. Физика (почему не входит?)
Физика – это не рендеринг, она работает отдельно и лишь меняет позицию объектов.
Коллизии.
Гравитация.
Симуляция твёрдых тел (Rigidbody, Box2D, Bullet, Ammo.js).
Частицы (это тоже симуляция, а не рендер).

2. Управление игроком (почему не входит?)
Движок только рендерит, а управление – это логика игры.
Ввод с клавиатуры, мыши, геймпада.
Движение камеры игрока.
Переключение оружия, взаимодействие с объектами.

3. Искусственный интеллект (AI)
AI – это игровая логика, а не рендеринг.
Патрулирование врагов.
Преследование игрока.
Поиск пути (A*).

4. UI, Меню, HUD
Игровой UI – это отдельный слой, часто на HTML/CSS или Canvas.
Кнопки, меню, интерфейсы.
Отображение жизней, карты.

5. Анимации (почему не входит полностью?)
Скелетная анимация (bone animation) требует парсинга skin и skeleton, что усложняет движок.
Но простая трансформация (вращение, перемещение) возможна, если просто менять modelMatrix.

6. Сетевой код
WebSockets/WebRTC – это уже игровая механика, рендеру без разницы, откуда пришли данные.
